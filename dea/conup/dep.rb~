# coding: UTF-8

require "steno"
require "steno/core_ext"


module Dea
  class Dependence
    include Comparable
    
    attr_accessor :type
    attr_accessor :rootTx
    attr_accessor :srcCompObjIdentifier
    attr_accessor :targetCompObjIdentifier
    
    attr_accessor :sourceService
    attr_accessor :targetService
    
    def initialize(type1,rootTx1,srcCompObjIdentifier1,targetCompIdentifier1,sourceService1,targetService1)
      @type =  type1
      @rootTx =  rootTx1
      @srcCompObjIdentifier =  srcCompObjIdentifier1
      @targetCompObjIdentifier =  targetCompObjIdentifier1
      
      @sourceService =  sourceService1
      @targetService = targetService1
    end
    
    def Dependency.createByDep(dep)
      new(dep.type,dep.rootTx,dep.srcCompObjIdentifier,
                    dep.targetCompObjIdentifier,dep.sourceService,dep.targetSource)
    end
    
    def <=>(other)
      str1 = @type + @rootTx + @srcCompObjIdentifier + @targetCompObjIdentifier
      str2 = other.type + other.rootTx + other.srcCompObjIdentifier + other.targetCompObjIdentifier
      return str1 <=> str2
    end
    
    def to_s
      
      str = @type +"," + @rooTx + ",src:" + @srcCompObjIdentifier +",target:" + @targetCompObjIdentifier+
                           ",ss:"+  @sourceService+", ts:" + @targSer ; 
      str
    end
  end
  
  
end
